[
    {
        "id": "5e7853464fdac029",
        "type": "tab",
        "label": "Flow 2",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e81114c06b79f5a9",
        "type": "function",
        "z": "5e7853464fdac029",
        "name": "",
        "func": "POI = context.get(\"POI\");\n\nif(msg.topic==\"POI\"){\n    \n    message = {payload : {\n                    info : msg.info,\n                    POI : getNearestPOI(msg.info.x, msg.info.y)}\n    };\n    return message;\n    \n}\nelse{\n    setMatrix();\n}\n\nfunction setMatrix(){\n    \n    context.set(\"POI\", msg.payload);\n    \n}\n\nfunction getNearestPOI(x, y){\n    \n    d = distance(x, y, POI[0]);\n    p = POI[0];\n    for(c=0; c<POI.length; c++){\n        d1 = distance(x, y, POI[c])\n        if(d1<d){\n            d = d1;\n            p = POI[c];\n        }\n    }\n    \n    return p;\n    \n}\n\nfunction distance(x, y, p){\n    return Math.sqrt(Math.pow(x - p.x, 2) + Math.pow(y - p.y, 2))\n}\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 280,
        "wires": [
            [
                "1a92162f1f6a1ef9",
                "eb2c5896721d5945"
            ]
        ]
    },
    {
        "id": "30cd086a896a22e8",
        "type": "csv",
        "z": "5e7853464fdac029",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 510,
        "y": 360,
        "wires": [
            [
                "e81114c06b79f5a9"
            ]
        ]
    },
    {
        "id": "9ec25bf10237fa2f",
        "type": "inject",
        "z": "5e7853464fdac029",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.0",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 340,
        "wires": [
            [
                "fc9c82bf362a1e2b"
            ]
        ]
    },
    {
        "id": "fc9c82bf362a1e2b",
        "type": "file in",
        "z": "5e7853464fdac029",
        "name": "POI-File",
        "filename": "C:\\Users\\franc\\Documents\\MiddlewareTech\\MiddlewareTech2022\\Node-Red\\POI.txt",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 300,
        "y": 420,
        "wires": [
            [
                "30cd086a896a22e8"
            ]
        ]
    },
    {
        "id": "069e4471bdf5891d",
        "type": "function",
        "z": "5e7853464fdac029",
        "name": "",
        "func": "m = {\n    topic : \"POI\",\n    info : {\n        x:  Math.random()*10000 - 5000,\n        y:  Math.random()*10000 - 5000,\n        noise:  Math.random()*80 + 30,\n        timestamp:  Date.now()\n    }\n};\nreturn m;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 180,
        "wires": [
            [
                "e81114c06b79f5a9"
            ]
        ]
    },
    {
        "id": "c95e41320c0f5f73",
        "type": "inject",
        "z": "5e7853464fdac029",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 160,
        "wires": [
            [
                "069e4471bdf5891d"
            ]
        ]
    },
    {
        "id": "67c5a6222a9baf49",
        "type": "debug",
        "z": "5e7853464fdac029",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 640,
        "wires": []
    },
    {
        "id": "eb2c5896721d5945",
        "type": "mqtt out",
        "z": "5e7853464fdac029",
        "name": "",
        "topic": "prova",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "061da9aabdc50d41",
        "x": 830,
        "y": 120,
        "wires": []
    },
    {
        "id": "1a92162f1f6a1ef9",
        "type": "debug",
        "z": "5e7853464fdac029",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 300,
        "wires": []
    },
    {
        "id": "ecd0c58b1e96bdc4",
        "type": "inject",
        "z": "5e7853464fdac029",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 580,
        "y": 100,
        "wires": [
            [
                "eb2c5896721d5945"
            ]
        ]
    },
    {
        "id": "7f0246abcaff27af",
        "type": "aedes broker",
        "z": "5e7853464fdac029",
        "name": "Broker",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 810,
        "y": 440,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "061da9aabdc50d41",
        "type": "mqtt-broker",
        "name": "",
        "broker": "tcp://localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    }
]